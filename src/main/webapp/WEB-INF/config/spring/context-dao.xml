<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <tx:annotation-driven/>

    <!-- Hibernate SessionFactory -->
    <bean id="localSessionFactory" class="cselp.dao.ExtLocalSessionFactoryBean">
        <property name="dataSource" ref="localDataSource"/>
        <!--<property name="mappingLocations" value="classpath*:/akr/sf/domain/local/**/*.hbm.xml"/>-->
        <property name="mappingLocations">
            <list>
                <value>classpath*:/akr/sf/domain/local/**/*.hbm.xml</value>
                <value>classpath*:/akr/sf/domain/report/**/*.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect.local}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.jdbc.batch_size">30</prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">/ehcache.xml</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
            </props>
        </property>
    </bean>

    <!-- ==============================TRANSACTION MANAGER============================= -->
    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="localTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="localSessionFactory"/>
        <property name="nestedTransactionAllowed" value="true"/>
    </bean>

    <!-- ==============================AOP configuration============================= -->
    <!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="localTxAdvice" transaction-manager="localTransactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <!-- all methods starting with 'find' are read-only -->
            <tx:method name="find*" read-only="true"/>
            <!-- other methods use the default transaction settings -->
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor id="localTransactionAdvice" advice-ref="localTxAdvice"
                     pointcut="execution(* cselp.service.local.I*.*(..))" order="10"/>
    </aop:config>

    <!-- Hibernate SessionFactory -->
    <bean id="externalSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="externalDataSource"/>
        <property name="mappingLocations" value="classpath*:/cselp/domain/external/**/*.hbm.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect.external}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.jdbc.batch_size">30</prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">/ehcache.xml</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
            </props>
        </property>
    </bean>

    <!-- ==============================TRANSACTION MANAGER============================= -->
    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="externalTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="externalSessionFactory"/>
        <property name="nestedTransactionAllowed" value="true"/>
    </bean>

    <!-- ==============================AOP configuration============================= -->
    <!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="externalTxAdvice" transaction-manager="externalTransactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <!-- all methods starting with 'find' are read-only -->
            <tx:method name="find*" read-only="true"/>
            <!-- other methods use the default transaction settings -->
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor id="externalTransactionAdvice" advice-ref="externalTxAdvice"
                     pointcut="execution(* cselp.service.external.I*.*(..))" order="20"/>
    </aop:config>

    <bean id="flightDao" class="cselp.dao.external.FlightDao">
        <property name="sessionFactory" ref="externalSessionFactory"/>
        <property name="appConfig" ref="appConfig"/>
    </bean>

    <bean id="lFlightDao" class="cselp.dao.local.LFlightDao">
        <property name="sessionFactory" ref="localSessionFactory"/>
    </bean>

    <bean id="reportDao" class="cselp.dao.local.ReportDao">
        <property name="sessionFactory" ref="localSessionFactory"/>
    </bean>

</beans>